env = GDK_BACKEND,wayland,x11,*
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

env = GTK_THEME,Arc-Dark
env = XCURSOR_THEME,Adwaita
env = XCURSOR_SIZE,24



# AUTOSTART
exec-once = systemctl --user start hyprpolkitagent
exec-once = waybar 
exec-once = waybar --config ~/.config/waybar/desktop.jsonc
#exec-once = swaybg -i ~/.config/hypr/wallpaper.jpg -m fill
exec-once = mako


# LOCAL VARIABLES
$terminal = alacritty
$fileManager = lf
$menu = wofi


# MONITORS
monitor=DP-1,1920x1080@60,0x0,1

# INPUT
input {
    kb_model = pc105
    kb_layout = us,ru
    #kb_variant = ,qwerty
    kb_options = grp:alt_shift_toggle
    numlock_by_default = false 
    follow_mouse = 1
}



general { 
    layout = master
    border_size = 1		            # size of the border around windows
    no_border_on_floating = false 	# disable borders for floating windows
    gaps_in = 4 	                # gaps between windows
    gaps_out = 6  			        # gaps between windows and monitor edges
    gaps_workspaces = 0  		    # gaps between workspaces

    col.active_border = rgb(cdcdcd)
    col.inactive_border = rgb(555555)

    no_focus_fallback = true
    
    # enables resizing windows by clicking and dragging on borders and 
    # use mod-key + right mouse OR see keybinding below
    resize_on_border = false
    # screen tearing is used to reduce latency and/or jitter in games.
    allow_tearing = false 
    # force floating windows to use a specific corner when being resized (1-4 going clockwise from top left, 0 to disable)
    resize_corner = 0
}

master {
     allow_small_split = false
     new_status = slave
     new_on_top = false
     orientation = left
     mfact =  0.55
     smart_resizing = false
     drop_at_cursor = false
}


decoration {
    rounding = 0 		        # rounded corners radius
    active_opacity = 1.0 	    # opacity of active windows
    inactive_opacity = 1.0 	    # opacity of inactive windows
    fullscreen_opacity = 1.0 	# opacity of fullscreen windows
       
    dim_inactive = true 	    # enables dimming of inactive windows
    dim_strength = 0.15		    # how much inactive windows should be dimmed
    dim_special = 0		        # how much to dim the rest of the screen by when a special workspace is open. 
   
    blur {
        enabled = false 
    }

    shadow {
        enabled = false
    }
}



animations {
    enabled = false
    first_launch_animation = false
}


cursor {
    hide_on_key_press = false
    persistent_warps = true
    warp_on_change_workspace = 1
    use_cpu_buffer = 0
}

ecosystem {
    no_donation_nag = true
}


misc { 
    font_family = Fira Code
    disable_hyprland_logo = true 
    disable_splash_rendering = true
    animate_manual_resizes = false
    force_default_wallpaper = 0
    animate_manual_resizes = false
    animate_mouse_windowdragging = false
    enable_swallow = false
    focus_on_activate = true
    background_color = rgb(0A0A0A)
    initial_workspace_tracking = 1
    close_special_on_empty = true # close the special workspace if the last window is removed
}

binds {
    workspace_center_on = 1
    movefocus_cycles_groupfirst = false
}




group{
    auto_group = true
    insert_after_current = true
    col.border_active = rgb(667755) 
    col.border_inactive = rgb(333333)
    col.border_locked_active = rgb(a54848)
    col.border_locked_inactive = rgb(333333)

    groupbar{
        enabled = true
        font_size = 12
        gradients = true
        height = 18
        stacked = false
        render_titles = true
        scrolling = false
        text_color = rgb(cdcdcd)        # controls the group bar text color
        col.active = rgb(667755)  # active group border color
        col.inactive = rgb(333333) # inactive (out of focus) group border color 
        col.locked_active = rgb(a54848)
        col.locked_inactive = rgb(333333)
    }
}


# KEYBINDINGSS
# bind = MODS, key, dispatcher, params

$mainMod = SUPER # Sets "Windows" key as main modifier

bind = $mainMod, Return, exec, $terminal
bind = $mainMod, E, exec, $fileManager
bind = $mainMod SHIFT, Q, closewindow, activewindow


bind = $mainMod, R, exec, pkill $menu || $menu 
bind = $mainMod, F, fullscreen, 1

bind = $mainMod, G, togglegroup,
bind = $mainMod SHIFT, G, lockactivegroup, toggle
bind = $mainMod CTRL, left, changegroupactive, b
bind = $mainMod CTRL, right, changegroupactive, f

# Swaps the active window with another window in the given direction
bind = $mainMod SHIFT, left, movewindoworgroup, l
bind = $mainMod SHIFT, right, movewindoworgroup, r
bind = $mainMod SHIFT, up, movewindoworgroup, u
bind = $mainMod SHIFT, down, movewindoworgroup, d




# Resize submap
bind = $mainMod SHIFT, R, submap, resize
submap = resize # will start a submap called "resize"

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 30 0
binde = , left, resizeactive, -30 0
binde = , up, resizeactive, 0 -30
binde = , down, resizeactive, 0 30

bind = , escape, submap, reset # use reset to go back to the global submap
submap = reset # will reset the submap, which will return to the global submap


# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic



# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow





# fn buttons
binde=,XF86AudioLowerVolume,  exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
binde=,XF86AudioRaiseVolume,  exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 10%+
bind =,XF86AudioMute,         exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
#bind =,XF86AudioMicMute,      exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
#binde=,XF86MonBrightnessUp,   exec, brightnessctl s 10%+
#binde=,XF86MonBrightnessDown, exec, brightnessctl s 10%-
#bind =,XF86AudioPlay,         exec, playerctl play-pause
#bind =,XF86AudioPrev,         exec, playerctl previous
#bind =,XF86AudioNext,         exec, playerctl next

##############################
### WINDOWS AND WORKSPACES ###
##############################

# See https://wiki.hypr:land.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

#windowrule = float, ^($terminal)$

# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
windowrulev2 = bordercolor rgb(a54848),fullscreen:1 # set bordercolor to red if window is fullscreen
#windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.
